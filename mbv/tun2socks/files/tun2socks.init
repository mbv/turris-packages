#!/bin/sh /etc/rc.common

USE_PROCD=1
# starts after network starts
START=40
# stops before networking stops
STOP=89

NAME="tun2socks"
PROG="/usr/bin/tun2socks"

start_program() {
    config_load "$NAME"

  	local enabled interface proxy_host proxy_port ip_address netmask ip6addr ip6gw
  	config_get_bool enabled "main" "enabled" "0"
  	[ "$enabled" -eq "1" ] || return 0

    config_get interface "main" "interface" "tun0"
    config_get ip_address "main" "ip_address" "172.16.250.1"
    config_get netmask "main" "netmask" "255.255.255.0"
    config_get ip6addr "main" "ip6addr" "fced:1111::10/64"
    config_get ip6gw "main" "ip6gw" "fced:1111::1"
    config_get proxy_host "main" "proxy_host" "127.0.0.1"
    config_get proxy_port "main" "proxy_port" "1080"
    
    uci set network.$interface=interface
    uci set network.$interface.device=$interface
    uci set network.$interface.proto='static'
    uci set network.$interface.ipaddr="$ip_address"
    uci set network.$interface.netmask="$netmask"

    uci set network.$interface.ip6addr="$ip6addr"
    uci set network.$interface.ip6gw="$ip6gw"

    uci commit network


    procd_open_instance
    procd_set_param command "$PROG" -device "$interface" -proxy socks5://"$proxy_host":"$proxy_port"
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-5}
    procd_close_instance
}

start_service() {
    echo "Starting service..."
    start_program
	  echo "tun2socks service started."
}


stop_service() {
    echo "Stopping service..."
    service_stop /usr/bin/tun2socks
    echo "tun2socks service stopped."
}

restart_service() {
    stop_service
    start_service
}
